@using Wfm.Domain.Consts
@using Wfm.Domain.Services.FileSystem
@using Wfm.Domain.Utils

@model Wfm.Domain.Features.FileManager.GetFiles.GetFilesResult

@{
    ViewData["Title"] = "Files";
}

<hgroup>
    <p>
        @if (ViewBag.BackPath != null)
        {
            @Html.ActionLink("Back", "Index", "Files", new { LocationIndex = Model.LocationIndex, RelativePath = ViewBag.BackPath })
        }
    </p>
</hgroup>

<nav aria-label="breadcrumb">
    <ul>
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink(ViewBag.LocationName as string, "Index", "Files", new { LocationIndex = Model.LocationIndex })</li>
        @foreach (KeyValuePair<string, string> item in FileSystemHelper.ConvertPathToList(Model.RelativePath))
        {
            <li>@Html.ActionLink(item.Key, "Index", "Files", new { LocationIndex = Model.LocationIndex, RelativePath = item.Value })</li>
        }
    </ul>
</nav>

<figure>
    <table role="grid">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>Size</th>
                <th>Modified</th>
                <th>Type</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in Model.Entries)
            {
                <tr>
                    <td class="thumbnail">
                        @if (ThumbnailConsts.Extensions.Contains(entry.Extension.ToLower()))
                        {
                            <img src='@Url.Action("Thumbnail", "Files", new { LocationIndex = Model.LocationIndex, RelativeFilePath = entry.RelativePath })' loading="lazy" />
                        }
                    </td>
                    <td>
                        @if (entry.Type == FileSystemEntryType.Directory)
                        {
                            @Html.ActionLink(entry.Name, "Index", "Files", new { LocationIndex = Model.LocationIndex, RelativePath = entry.RelativePath })
                        }
                        else
                        {
                            @entry.Name
                        }
                    </td>
                    <td>
                        @if (entry.Type == FileSystemEntryType.File && entry.Size > 0)
                        {
                            @FileSystemHelper.FormatBytes(entry.Size)
                        }
                    </td>
                    <td>@entry.ModifiedDate.ToString("yyyy.MM.dd HH:mm")</td>
                    <td>@entry.Extension.ToUpper()</td>
                    <td>
                        @if (entry.Type == FileSystemEntryType.File)
                        {
                            @Html.ActionLink("Preview", "Preview", "Files", new { LocationIndex = Model.LocationIndex, RelativeFilePath = entry.RelativePath })
                            <text> | </text>
                            @Html.ActionLink("Download", "Download", "Files", new { LocationIndex = Model.LocationIndex, RelativeFilePath = entry.RelativePath })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</figure>
